{
  "//": "babel-register is needed for mocha",
  "_args": [
    [
      {
        "raw": "enumify",
        "scope": null,
        "escapedName": "enumify",
        "name": "enumify",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/jameskhoo/Projects/Nodejs/networking"
    ]
  ],
  "_from": "enumify@latest",
  "_id": "enumify@1.0.4",
  "_inCache": true,
  "_location": "/enumify",
  "_nodeVersion": "5.0.0",
  "_npmUser": {
    "name": "rauschma",
    "email": "axel@rauschma.de"
  },
  "_npmVersion": "3.3.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "enumify",
    "scope": null,
    "escapedName": "enumify",
    "name": "enumify",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/enumify/-/enumify-1.0.4.tgz",
  "_shasum": "2bb6263071dd4551e54c55755707fad24a40cd7e",
  "_shrinkwrap": null,
  "_spec": "enumify",
  "_where": "/Users/jameskhoo/Projects/Nodejs/networking",
  "author": {
    "name": "Axel Rauschmayer"
  },
  "babel": {
    "presets": [
      "es2015"
    ]
  },
  "bugs": {
    "url": "https://github.com/rauschma/enumify/issues"
  },
  "dependencies": {},
  "description": "A JavaScript library for enums. To be used by transpiled ES6 (e.g. via Babel).",
  "devDependencies": {
    "babel-cli": "^6.2.4",
    "babel-preset-es2015": "^6.3.13",
    "babel-register": "^6.2.0",
    "mocha": "^2.2.5"
  },
  "directories": {},
  "dist": {
    "shasum": "2bb6263071dd4551e54c55755707fad24a40cd7e",
    "tarball": "https://registry.npmjs.org/enumify/-/enumify-1.0.4.tgz"
  },
  "gitHead": "d8a894d1fa58339ffb9f1d584d791843c991aa36",
  "homepage": "https://github.com/rauschma/enumify#readme",
  "license": "MIT",
  "main": "./lib/enumify.js",
  "maintainers": [
    {
      "name": "rauschma",
      "email": "axel@rauschma.de"
    }
  ],
  "name": "enumify",
  "optionalDependencies": {},
  "readme": "# Enumify\n\nA JavaScript library for enums. To be used by transpiled ES6 (e.g. via Babel).\n\nThe approach taken by Enumify is heavily inspired by Java enums.\n\n## The basics\n\nInstall:\n\n```text\nnpm install enumify\n```\n\nUse:\n\n```js\nimport {Enum} from 'enumify';\n\nclass Color extends Enum {}\nColor.initEnum(['RED', 'GREEN', 'BLUE']);\n\nconsole.log(Color.RED); // Color.RED\nconsole.log(Color.GREEN instanceof Color); // true\n\nnew Color();\n    // Error: Enum classes can’t be instantiated\n```\n\n## Properties of enum classes\n\nEnums get a static property `enumValues`, which contains an Array with all enum values:\n\n```js\nfor (const c of Color.enumValues) {\n    console.log(c);\n}\n// Output:\n// Color.RED\n// Color.GREEN\n// Color.BLUE\n```\n\nThe inherited tool method `enumValueOf()` maps names to values:\n\n```js\nconsole.log(Color.enumValueOf('RED') === Color.RED); // true\ntrue\n```\n\n## Properties of enum values\n\nEnumify adds two properties to every enum value:\n\n* `name`: the name of the enum value.\n\n    ```repl\n    > Color.BLUE.name\n    'BLUE'\n    ```\n\n* `ordinal`: the position of the enum value within the Array `enumValues`.\n\n    ```repl\n    > Color.BLUE.ordinal\n    2\n    ```\n\n## Adding properties to enum values\n\n`initEnum()` also accepts an object as its parameter. That enables you to add properties to enum values:\n\n```js\nclass TicTacToeColor extends Enum {}\n\n// Alas, data properties don’t work, because the enum\n// values (TicTacToeColor.X etc.) don’t exist when\n// the object literals are evaluated.\nTicTacToeColor.initEnum({\n    O: {\n        get inverse() { return TicTacToeColor.X },\n    },\n    X: {\n        get inverse() { return TicTacToeColor.O },\n    },\n});\n\nconsole.log(TicTacToeColor.O.inverse); // TicTacToeColor.X\n```\n\n## More information\n\n* The directory `test/` contains examples.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rauschma/enumify.git"
  },
  "scripts": {
    "build": "babel src --out-dir lib",
    "build-test-es5": "npm run build && babel test --out-dir test-es5 && sed -i '' 's/src\\/enumify/lib\\/enumify/' test-es5/enumify_test.js",
    "mocha": "mocha --ui qunit",
    "prepublish": "npm run build",
    "test": "mocha --ui qunit --compilers js:babel-register",
    "watch": "babel src --out-dir lib --watch"
  },
  "version": "1.0.4"
}
